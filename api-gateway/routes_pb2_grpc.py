# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import routes_pb2 as routes__pb2


class RouteServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRoute = channel.unary_unary(
                '/routes.RouteService/CreateRoute',
                request_serializer=routes__pb2.CreateRouteRequest.SerializeToString,
                response_deserializer=routes__pb2.RouteResponse.FromString,
                )
        self.GetRoute = channel.unary_unary(
                '/routes.RouteService/GetRoute',
                request_serializer=routes__pb2.GetRouteRequest.SerializeToString,
                response_deserializer=routes__pb2.RouteResponse.FromString,
                )
        self.ListRoutes = channel.unary_unary(
                '/routes.RouteService/ListRoutes',
                request_serializer=routes__pb2.ListRoutesRequest.SerializeToString,
                response_deserializer=routes__pb2.ListRoutesResponse.FromString,
                )
        self.UpdateRoute = channel.unary_unary(
                '/routes.RouteService/UpdateRoute',
                request_serializer=routes__pb2.UpdateRouteRequest.SerializeToString,
                response_deserializer=routes__pb2.RouteResponse.FromString,
                )
        self.DeleteRoute = channel.unary_unary(
                '/routes.RouteService/DeleteRoute',
                request_serializer=routes__pb2.GetRouteRequest.SerializeToString,
                response_deserializer=routes__pb2.RouteResponse.FromString,
                )
        self.AssignRouteToVehicle = channel.unary_unary(
                '/routes.RouteService/AssignRouteToVehicle',
                request_serializer=routes__pb2.AssignRouteToVehicleRequest.SerializeToString,
                response_deserializer=routes__pb2.RouteResponse.FromString,
                )
        self.CalculateFuelConsumption = channel.unary_unary(
                '/routes.RouteService/CalculateFuelConsumption',
                request_serializer=routes__pb2.CalculateFuelConsumptionRequest.SerializeToString,
                response_deserializer=routes__pb2.FuelConsumptionResponse.FromString,
                )


class RouteServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignRouteToVehicle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateFuelConsumption(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RouteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRoute,
                    request_deserializer=routes__pb2.CreateRouteRequest.FromString,
                    response_serializer=routes__pb2.RouteResponse.SerializeToString,
            ),
            'GetRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoute,
                    request_deserializer=routes__pb2.GetRouteRequest.FromString,
                    response_serializer=routes__pb2.RouteResponse.SerializeToString,
            ),
            'ListRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRoutes,
                    request_deserializer=routes__pb2.ListRoutesRequest.FromString,
                    response_serializer=routes__pb2.ListRoutesResponse.SerializeToString,
            ),
            'UpdateRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRoute,
                    request_deserializer=routes__pb2.UpdateRouteRequest.FromString,
                    response_serializer=routes__pb2.RouteResponse.SerializeToString,
            ),
            'AssignRouteToVehicle': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignRouteToVehicle,
                    request_deserializer=routes__pb2.AssignRouteToVehicleRequest.FromString,
                    response_serializer=routes__pb2.RouteResponse.SerializeToString,
            ),
            'CalculateFuelConsumption': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateFuelConsumption,
                    request_deserializer=routes__pb2.CalculateFuelConsumptionRequest.FromString,
                    response_serializer=routes__pb2.FuelConsumptionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'routes.RouteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RouteService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routes.RouteService/CreateRoute',
            routes__pb2.CreateRouteRequest.SerializeToString,
            routes__pb2.RouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routes.RouteService/GetRoute',
            routes__pb2.GetRouteRequest.SerializeToString,
            routes__pb2.RouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routes.RouteService/ListRoutes',
            routes__pb2.ListRoutesRequest.SerializeToString,
            routes__pb2.ListRoutesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routes.RouteService/UpdateRoute',
            routes__pb2.UpdateRouteRequest.SerializeToString,
            routes__pb2.RouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignRouteToVehicle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routes.RouteService/AssignRouteToVehicle',
            routes__pb2.AssignRouteToVehicleRequest.SerializeToString,
            routes__pb2.RouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalculateFuelConsumption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routes.RouteService/CalculateFuelConsumption',
            routes__pb2.CalculateFuelConsumptionRequest.SerializeToString,
            routes__pb2.FuelConsumptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
