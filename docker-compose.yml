version: '3.8'

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:6.0
    container_name: xyz-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-example}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - xyz-network

  # Servicio de Autenticación
  auth-service:
    container_name: xyz-auth-service
    build: ./auth-service
    ports:
      - "50051:50051"
    environment:
      - DB_HOST=mongodb
      - DB_NAME=auth_service
      - JWT_SECRET=${JWT_SECRET}
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - xyz-network

  # Servicio de Vehículos
  vehicle-service:
    container_name: xyz-vehicle-service
    build: ./vehicle-service
    ports:
      - "50052:50052"
    environment:
      - DB_HOST=mongodb
      - DB_NAME=vehicle_service
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    depends_on:
      - mongodb
      - auth-service
    networks:
      - xyz-network

  route-service:
    container_name: xyz-route-service
    build: ./route-service
    environment:
      - DB_HOST=mongodb
      - DB_NAME=route_service
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - VEHICLE_SERVICE_HOST=vehicle-service:50052
      - ROUTE_SERVICE_PORT=50053
    depends_on:
      - mongodb
      - vehicle-service
    ports:
      - "50053:50053"
    networks:
      - xyz-network

  api-gateway:
    container_name: xyz-api-gateway
    build: ./api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - vehicle-service
    networks:
      - xyz-network

  fuel-consumption-service:
    container_name: xyz-fuel-consumption-service
    build: ./fuel-consumption-service
    environment:
      - DB_HOST=mongodb
      - DB_NAME=fuel_service
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - VEHICLE_SERVICE_HOST=vehicle-service:50052
      - ROUTE_SERVICE_HOST=route-service:50053
      - FUEL_SERVICE_PORT=50054
    depends_on:
      - mongodb
      - vehicle-service
      - route-service
    ports:
      - "50054:50054"
    networks:
      - xyz-network

  driver-service:
    container_name: xyz-driver-service
    build: ./driver-service
    environment:
      - DB_HOST=mongodb
      - DB_NAME=driver_service
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - VEHICLE_SERVICE_HOST=vehicle-service:50052
      - ROUTE_SERVICE_HOST=route-service:50053
      - DRIVER_SERVICE_PORT=50055
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mongodb
      - vehicle-service
      - route-service
    ports:
      - "50055:50055"
    networks:
      - xyz-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: xyz-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - xyz-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: xyz-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - xyz-network

volumes:
  mongodb_data:

networks:
  xyz-network:
    driver: bridge